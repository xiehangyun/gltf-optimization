import{WebIO as e}from"@gltf-transform/core";import{KHRONOS_EXTENSIONS as t,KHRTextureBasisu as s}from"@gltf-transform/extensions";import{metalRough as i,prune as a,dedup as o,palette as r,join as n,flatten as l,weld as c,resample as m,sparse as u,draco as d,compressTexture as f}from"@gltf-transform/functions";import{createEncoderModule as g,createDecoderModule as p}from"draco3dgltf";let h=null;async function x(e,t,s){let i=await new Promise((e=>{if(h)return e(h);const t=document.createElement("script");t.src="/basis/encoder/basis_encoder.js",t.onload=()=>{BASIS({onRuntimeInitialized:()=>{}}).then((t=>{h=t,e(h),t.initializeBasis?(t.initializeBasis(),console.log("module.initializeBasis() called successfully.")):console.error("module.initializeBasis() is not available on the Module object.")}))},t.onerror=()=>{console.error("Failed to load the Basis module.")},document.head.appendChild(t)})),{BasisEncoder:a}=i,o=new a;const r=i.basis_tex_format.cUASTC4x4.value;o.setFormatMode(r),o.setUASTC(!0),o.setCreateKTX2File(!0),o.setKTX2UASTCSupercompression(!0);let n=i.ldr_image_type.cPNGImage.value;"image/jpeg"!==t&&"image/jpg"!==t&&"jfif"!==t||(n=i.ldr_image_type.cJPGImage.value),o.setSliceSourceImage(0,e,0,0,n),o.setPackUASTCFlags(0),o.setKTX2SRGBTransferFunc(s),o.setPerceptual(s),o.setMipGen(!0),o.setMipSRGB(s);const l=new Uint8Array(536870912);try{const e=o.encode(l);return 0===e?null:l.slice(0,e)}catch(e){return null}finally{o.delete()}}const z={maxSize:2048,hasJoin:!0,hasPalette:!0,hasFlatten:!0,hasKtx2:!0};async function w(h,w=z){const S=(new e).registerExtensions(t).registerDependencies({"draco3d.decoder":await p(),"draco3d.encoder":await g()});let{maxSize:T=2048,hasJoin:_,hasPalette:R,hasFlatten:y,hasKtx2:B}=w;const E=new Uint8Array(h),I=await S.readBinary(E);if(I.getRoot().listMaterials().some((e=>!!e.getExtension("KHR_materials_pbrSpecularGlossiness")))){await I.transform(i()),I.getRoot().listMaterials().forEach((e=>{const t=e.getExtension("KHR_materials_ior");t?.setIOR(1.5)}));const e=["KHR_materials_ior","KHR_materials_specular"];for(const t of I.getRoot().listExtensionsUsed())e.includes(t.extensionName)&&t.dispose();I.transform(a())}let K=[];K.push(o()),R&&K.push(r({min:5})),_&&K.push(n()),y&&K.push(l()),K.push(c()),K.push(m()),K.push(a()),K.push(u({ratio:.2})),K.push(d({method:"edgebreaker",quantizePosition:24,quantizeNormal:10,quantizeColor:8,quantizeTexcoord:12,quantizeGeneric:8,quantizationVolume:"mesh"})),await I.transform(...K);let M=!1,P=I.getRoot().listTextures();console.time("transformTexture");for(var U=0;U<P.length;U++){let e=P[U],t=e.getSize();console.time("one texture transformTexture"),t&&T&&(t[0]>T||t[1]>T)&&await f(e,{resize:[T,T]});let s=e.getMimeType();if(B&&"image/ktx2"!==s){let t=e.getImage(),i=e.getSize();if(i)if(i[0]*i[1]<6e6){let i=await x(t,s,!0);i&&(M=!0,e.setImage(i).setMimeType("image/ktx2").setURI(`${e.getName()}.ktx2`))}else console.warn("texture size limited 6 megapixels")}console.timeEnd("one texture transformTexture"),console.info("----textures compress progress:",`${U+1}/${P.length}`)}console.timeEnd("transformTexture"),M&&I.createExtension(s).setRequired(!0);return await S.writeBinary(I)}export{w as gltfOptimization,x as toKTX2UASTC};
